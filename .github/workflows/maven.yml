# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  yarn:
    name: cache node modules
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache node_modules
        uses: actions/cache@v3
        id: yarn-cache-node-modules
        with:
          path: src/frontend/node_modules
          key: ${{ runner.os }}-yarn-cache-node-modules-${{ hashFiles('frontend/yarn.lock') }}
      - name: Yarn install if cache is invalid
        if: steps.yarn-cache-node-modules.outputs.cache-hit != 'true'
        working-directory: ./src/frontend
        run: yarn install
  lint:
    name: lint frontend
    runs-on: ubuntu-latest
    needs: [ yarn ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache node_modules
        uses: actions/cache@v3
        id: yarn-cache-node-modules
        with:
          path: src/frontend/node_modules
          key: ${{ runner.os }}-yarn-cache-node-modules-${{ hashFiles('frontend/yarn.lock') }}
      - name: lint
        working-directory: ./src/frontend
        run: npm run lint
  frontend-build:
    name: build frontend
    runs-on: ubuntu-latest
    needs: [ yarn, lint ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache node_modules
        uses: actions/cache@v3
        id: yarn-cache-node-modules
        with:
          path: src/frontend/node_modules
          key: ${{ runner.os }}-yarn-cache-node-modules-${{ hashFiles('frontend/yarn.lock') }}
      - name: build vite
        working-directory: ./src/frontend
        run: npm run build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend
          path: src/frontend/dist
  quarkus-build:
    name: build backend
    runs-on: ubuntu-latest
    needs: [frontend-build]
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: github login
      run: echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKER_USER }} --password-stdin
    - uses: actions/download-artifact@v3
      with:
        name: frontend
        path: ./src/main/resources/META-INF/resources
    - name: Build with Maven
      run: mvn install -Dquarkus.container-image.build=true -Dquarkus.container-image.push=true -DskipTests
    - uses: geekyeggo/delete-artifact@v1
      with:
        name: frontend
